package zzh.com.haooa.greenDao;

import java.util.Map;

import org.greenrobot.greendao.AbstractDao;
import org.greenrobot.greendao.AbstractDaoSession;
import org.greenrobot.greendao.database.Database;
import org.greenrobot.greendao.identityscope.IdentityScopeType;
import org.greenrobot.greendao.internal.DaoConfig;

import zzh.com.haooa.bean.DepartmentBean;
import zzh.com.haooa.bean.InviteTableBean;
import zzh.com.haooa.bean.UserAccountTableBean;
import zzh.com.haooa.bean.UserContactsTableBean;
import zzh.com.haooa.bean.UserInfoBean;

import zzh.com.haooa.greenDao.DepartmentBeanDao;
import zzh.com.haooa.greenDao.InviteTableBeanDao;
import zzh.com.haooa.greenDao.UserAccountTableBeanDao;
import zzh.com.haooa.greenDao.UserContactsTableBeanDao;
import zzh.com.haooa.greenDao.UserInfoBeanDao;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see org.greenrobot.greendao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig departmentBeanDaoConfig;
    private final DaoConfig inviteTableBeanDaoConfig;
    private final DaoConfig userAccountTableBeanDaoConfig;
    private final DaoConfig userContactsTableBeanDaoConfig;
    private final DaoConfig userInfoBeanDaoConfig;

    private final DepartmentBeanDao departmentBeanDao;
    private final InviteTableBeanDao inviteTableBeanDao;
    private final UserAccountTableBeanDao userAccountTableBeanDao;
    private final UserContactsTableBeanDao userContactsTableBeanDao;
    private final UserInfoBeanDao userInfoBeanDao;

    public DaoSession(Database db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        departmentBeanDaoConfig = daoConfigMap.get(DepartmentBeanDao.class).clone();
        departmentBeanDaoConfig.initIdentityScope(type);

        inviteTableBeanDaoConfig = daoConfigMap.get(InviteTableBeanDao.class).clone();
        inviteTableBeanDaoConfig.initIdentityScope(type);

        userAccountTableBeanDaoConfig = daoConfigMap.get(UserAccountTableBeanDao.class).clone();
        userAccountTableBeanDaoConfig.initIdentityScope(type);

        userContactsTableBeanDaoConfig = daoConfigMap.get(UserContactsTableBeanDao.class).clone();
        userContactsTableBeanDaoConfig.initIdentityScope(type);

        userInfoBeanDaoConfig = daoConfigMap.get(UserInfoBeanDao.class).clone();
        userInfoBeanDaoConfig.initIdentityScope(type);

        departmentBeanDao = new DepartmentBeanDao(departmentBeanDaoConfig, this);
        inviteTableBeanDao = new InviteTableBeanDao(inviteTableBeanDaoConfig, this);
        userAccountTableBeanDao = new UserAccountTableBeanDao(userAccountTableBeanDaoConfig, this);
        userContactsTableBeanDao = new UserContactsTableBeanDao(userContactsTableBeanDaoConfig, this);
        userInfoBeanDao = new UserInfoBeanDao(userInfoBeanDaoConfig, this);

        registerDao(DepartmentBean.class, departmentBeanDao);
        registerDao(InviteTableBean.class, inviteTableBeanDao);
        registerDao(UserAccountTableBean.class, userAccountTableBeanDao);
        registerDao(UserContactsTableBean.class, userContactsTableBeanDao);
        registerDao(UserInfoBean.class, userInfoBeanDao);
    }
    
    public void clear() {
        departmentBeanDaoConfig.clearIdentityScope();
        inviteTableBeanDaoConfig.clearIdentityScope();
        userAccountTableBeanDaoConfig.clearIdentityScope();
        userContactsTableBeanDaoConfig.clearIdentityScope();
        userInfoBeanDaoConfig.clearIdentityScope();
    }

    public DepartmentBeanDao getDepartmentBeanDao() {
        return departmentBeanDao;
    }

    public InviteTableBeanDao getInviteTableBeanDao() {
        return inviteTableBeanDao;
    }

    public UserAccountTableBeanDao getUserAccountTableBeanDao() {
        return userAccountTableBeanDao;
    }

    public UserContactsTableBeanDao getUserContactsTableBeanDao() {
        return userContactsTableBeanDao;
    }

    public UserInfoBeanDao getUserInfoBeanDao() {
        return userInfoBeanDao;
    }

}
